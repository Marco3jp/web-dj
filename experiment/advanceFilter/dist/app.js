!function(e){var t={};function n(s){if(t[s])return t[s].exports;var i=t[s]={i:s,l:!1,exports:{}};return e[s].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(s,i,function(t){return e[t]}.bind(null,i));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class s{constructor(e){this.node=e,this.prevItem=null,this.nextItem=null}disable(){this.node.disconnect(),this.prevItem.node.connect(this.nextItem.node),this.prevItem.nextItem=this.nextItem,this.nextItem.prevItem=this.prevItem,this.prevItem=null,this.nextItem=null}enable(){}}class i extends s{constructor(e,t){super(e.createBiquadFilter()),this.node.type=t}enable(e){this.prevItem=e.prevItem,this.nextItem=e,this.prevItem.node.disconnect(),this.prevItem.node.connect(this.node),this.node.connect(this.nextItem.node),this.prevItem.nextItem=this,this.nextItem.prevItem=this}}class r{constructor(e,t,n){this.effectItem=new i(e,t),this.threholdElement=document.querySelector(`#${t}-threshold`),this.disableElement=document.querySelector("#disable-"+t),this.enableElement=document.querySelector("#enable-"+t),this.disableElement.addEventListener("click",()=>{this.disableElement.disabled=!0,this.enableElement.disabled=!1,this.effectItem.disable()}),this.enableElement.addEventListener("click",()=>{this.disableElement.disabled=!1,this.enableElement.disabled=!0,this.effectItem.enable(n)}),this.threholdElement.addEventListener("change",()=>{this.effectItem.node.frequency.setValueAtTime(this.threholdElement.valueAsNumber,e.currentTime)})}}const o=document.querySelector("#audio-track"),l=new FileReader,d=new AudioContext,a=new class extends s{constructor(e){super(e)}disable(){console.warn("this item is destination item! DON'T ABLE TO DISABLE.")}enable(){console.warn("this item is destination item! ALWAYS ENABLE.")}}(d.destination),c=new class extends s{constructor(e){super(e)}disable(){console.warn("this item is audio source item! DON'T ABLE TO DISABLE.")}enable(){console.warn("this item is audio source item! ALWAYS ENABLED.")}}(d.createBufferSource());new r(d,"lowpass",a),new r(d,"highpass",a),new r(d,"bandpass",a),new r(d,"lowshelf",a),new r(d,"highshelf",a),new r(d,"peaking",a),new r(d,"notch",a),new r(d,"allpass",a);o.addEventListener("input",()=>{l.readAsArrayBuffer(o.files[0])}),l.addEventListener("load",()=>{d.decodeAudioData(l.result,e=>{window.lastEffectItem=c,c.node.buffer=e,c.node.connect(d.destination),c.nextItem=a,a.prevItem=c,c.node.start()})})}]);